// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// USUARIO ADMINIDTRADOR
model User {
  id Int  @id @default(autoincrement())
  usuario String @unique
  password String
}

// TABLA DE ROLES
model Role {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  abbreviation String
  permissions RolePermission[]
}

// TABLA DE PERMISOS
model Permission {
  id      Int     @id @default(autoincrement())
  name    String  @unique
  status  Boolean @default(true)
  roles   RolePermission[]
}

// TABLA DE UNIFICACION ROLES PERMISOS
model RolePermission {
  roleId      Int
  permissionId Int
  role        Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission  Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@id([roleId, permissionId]) // Llave compuesta para la relaci√≥n muchos a muchos
}