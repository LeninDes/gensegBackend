// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// USUARIO ADMINIDTRADOR
model User {
  id Int  @id @default(autoincrement())
  usuario String @unique
  password String
}

// TABLA DE ROLES
model Rol {
  id_rol      Int     @id     @default(autoincrement())
  n_rol       String
  abrev       String
  datellePermisos   DetallePermiso[]
  usuarios          Usuario[]
}

model Permiso {
  id_per            Int     @id     @default(autoincrement())
  n_per             String
  abreviatura       String?
  datellePermisos    DetallePermiso[]
}

model DetallePermiso {
  id_dper           Int     @id     @default(autoincrement())
  id_rol            Int 
  id_per            Int
  estado            Boolean @default(false)
  permisos  Permiso @relation(fields: [id_per], references: [id_per])
  roles     Rol @relation(fields: [id_rol], references: [id_rol])
}

model Usuario {
  dni                   String @db.Char(8)
  n_usu                 String  
  estado                Boolean @default(true)
  password              String
  rol_id                Int   
  subunidad_id_subuni   Int   
  @@id([dni, rol_id, subunidad_id_subuni]) // Clave primaria compuesta
  rol       Rol         @relation(fields: [rol_id], references: [id_rol])
  sub_uni   Sub_unidad  @relation(fields: [subunidad_id_subuni], references: [id_subuni])
}

model Sub_unidad {
  id_subuni Int @id @default(autoincrement())
  n_subuni  String
  abreviatura     String
  usuarios     Usuario[]
}
